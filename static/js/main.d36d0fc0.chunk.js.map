{"version":3,"sources":["List.js","App.js","index.js"],"names":["dataStructure","reinsert","array","colFrom","rowFrom","colTo","rowTo","_array","slice","val","splice","calculateVisiblePositions","clamp","n","min","max","Math","getColumnWidth","window","innerWidth","length","height","width","layout","newOrder","map","column","col","_","range","item","row","springSetting1","stiffness","damping","springSetting2","List","state","order","lastPress","currentColumn","isPressed","mouse","isResizing","delta","componentWillMount","resizeTimeout","componentDidMount","addEventListener","handleMouseMove","handleTouchMove","handleMouseUp","handleResize","componentWillUnmount","removeEventListener","handleTouchStart","key","pressLocation","e","handleMouseDown","touches","preventDefault","pageX","pageY","dx","dy","floor","indexOf","setState","pressX","pressY","clearTimeout","applyResizingState","setTimeout","console","log","this","className","colIndex","style","x","y","visualPosition","isActive","translateX","translateY","scale","spring","onMouseDown","bind","onTouchStart","WebkitTransform","transform","zIndex","src","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d36d0fc0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport __ from \"lodash\";\r\nimport { Motion, spring, presets } from \"react-motion\";\r\n\r\nconst dataStructure = [\r\n  [0, 1, 2],\r\n  [3, 4, 5, 6, 7],\r\n  [8, 9, 10, 11],\r\n];\r\n\r\nconst reinsert = (array, colFrom, rowFrom, colTo, rowTo) => {\r\n  const _array = array.slice(0);\r\n  const val = _array[colFrom][rowFrom];\r\n  _array[colFrom].splice(rowFrom, 1);\r\n  _array[colTo].splice(rowTo, 0, val);\r\n  calculateVisiblePositions(_array);\r\n  return _array;\r\n};\r\n\r\nconst gutterPadding = 21;\r\nconst clamp = (n, min, max) => Math.max(Math.min(n, max), min);\r\nconst getColumnWidth = () =>\r\n  window.innerWidth / dataStructure.length -\r\n  gutterPadding / dataStructure.length;\r\nconst height = 110;\r\n\r\nlet width = getColumnWidth(),\r\n  layout = null;\r\n\r\nconst calculateVisiblePositions = (newOrder) => {\r\n  width = getColumnWidth();\r\n  layout = newOrder.map((column, col) => {\r\n    return _.range(column.length + 1).map((item, row) => {\r\n      return [width * col, height * row];\r\n    });\r\n  });\r\n};\r\n\r\nconst springSetting1 = { stiffness: 180, damping: 10 };\r\nconst springSetting2 = { stiffness: 150, damping: 16 };\r\n\r\nclass List extends React.Component {\r\n  state = {\r\n    order: dataStructure,\r\n    lastPress: null,\r\n    currentColumn: null,\r\n    isPressed: false,\r\n    mouse: [0, 0],\r\n    isResizing: false,\r\n    delta: [0, 0],\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    this.resizeTimeout = null;\r\n    calculateVisiblePositions(dataStructure);\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"mousemove\", this.handleMouseMove);\r\n    window.addEventListener(\"touchmove\", this.handleTouchMove);\r\n    window.addEventListener(\"touchend\", this.handleMouseUp);\r\n    window.addEventListener(\"mouseup\", this.handleMouseUp);\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  };\r\n\r\n  handleTouchStart = (key, currentColumn, pressLocation, e) => {\r\n    this.handleMouseDown(key, currentColumn, pressLocation, e.touches[0]);\r\n  };\r\n\r\n  handleTouchMove = (e) => {\r\n    e.preventDefault();\r\n    this.handleMouseMove(e.touches[0]);\r\n  };\r\n\r\n  handleMouseMove = ({ pageX, pageY }) => {\r\n    const {\r\n      order,\r\n      lastPress,\r\n      currentColumn: colFrom,\r\n      isPressed,\r\n      delta: [dx, dy],\r\n    } = this.state;\r\n    if (isPressed) {\r\n      const mouse = [pageX - dx, pageY - dy];\r\n      const colTo = clamp(Math.floor((mouse[0] + width / 2) / width), 0, 2);\r\n      const rowTo = clamp(Math.floor((mouse[1] + height / 2) / height), 0, 100);\r\n      const rowFrom = order[colFrom].indexOf(lastPress);\r\n      const newOrder = reinsert(order, colFrom, rowFrom, colTo, rowTo);\r\n      this.setState({\r\n        mouse,\r\n        order: newOrder,\r\n        currentColumn: colTo,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleMouseDown = (\r\n    key,\r\n    currentColumn,\r\n    [pressX, pressY],\r\n    { pageX, pageY }\r\n  ) => {\r\n    this.setState({\r\n      lastPress: key,\r\n      currentColumn,\r\n      isPressed: true,\r\n      delta: [pageX - pressX, pageY - pressY],\r\n      mouse: [pressX, pressY],\r\n    });\r\n  };\r\n\r\n  handleMouseUp = () => {\r\n    this.setState({\r\n      isPressed: false,\r\n      delta: [0, 0],\r\n    });\r\n  };\r\n\r\n  handleResize = () => {\r\n    clearTimeout(this.resizeTimeout);\r\n    this.applyResizingState(true);\r\n    this.resizeTimeout = setTimeout(() => this.applyResizingState(false), 100);\r\n  };\r\n\r\n  applyResizingState = (isResizing) => {\r\n    this.setState({ isResizing });\r\n    calculateVisiblePositions(dataStructure);\r\n  };\r\n\r\n  render() {\r\n    console.log(\r\n      this.state,\r\n      `Last selected List item is List ${this.state.lastPress + 1}`\r\n    );\r\n\r\n    const {\r\n      order,\r\n      lastPress,\r\n      currentColumn,\r\n      isPressed,\r\n      mouse,\r\n      isResizing,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"items\">\r\n        {order.map((column, colIndex) => {\r\n          return column.map((row) => {\r\n            let style,\r\n              x,\r\n              y,\r\n              visualPosition = order[colIndex].indexOf(row),\r\n              isActive =\r\n                row === lastPress && colIndex === currentColumn && isPressed;\r\n            if (isActive) {\r\n              [x, y] = mouse;\r\n              style = {\r\n                translateX: x,\r\n                translateY: y,\r\n                scale: spring(1.1, springSetting1),\r\n              };\r\n            } else if (isResizing) {\r\n              [x, y] = layout[colIndex][visualPosition];\r\n              style = {\r\n                translateX: x,\r\n                translateY: y,\r\n                scale: 1,\r\n              };\r\n            } else {\r\n              [x, y] = layout[colIndex][visualPosition];\r\n              style = {\r\n                translateX: spring(x, springSetting2),\r\n                translateY: spring(y, springSetting2),\r\n                scale: spring(1, springSetting1),\r\n              };\r\n            }\r\n\r\n            return (\r\n              <Motion key={row} style={style}>\r\n                {({ translateX, translateY, scale }) => (\r\n                  <div\r\n                    onMouseDown={this.handleMouseDown.bind(\r\n                      null,\r\n                      row,\r\n                      colIndex,\r\n                      [x, y]\r\n                    )}\r\n                    onTouchStart={this.handleTouchStart.bind(\r\n                      null,\r\n                      row,\r\n                      colIndex,\r\n                      [x, y]\r\n                    )}\r\n                    className={isActive ? \"item is-active\" : \"item\"}\r\n                    style={{\r\n                      WebkitTransform: `translate3d(${translateX}px, ${translateY}px, 0) scale(${scale})`,\r\n                      transform: `translate3d(${translateX}px, ${translateY}px, 0) scale(${scale})`,\r\n                      zIndex:\r\n                        row === lastPress && colIndex === currentColumn\r\n                          ? 99\r\n                          : visualPosition,\r\n                    }}\r\n                  >\r\n                    List {row + 1}\r\n                    <img src=\"https://loremflickr.com/320/240\" />\r\n                  </div>\r\n                )}\r\n              </Motion>\r\n            );\r\n          });\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport List from \"./List\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">My DnD Layout Exm</h1>\n      <div>\n        <List />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}